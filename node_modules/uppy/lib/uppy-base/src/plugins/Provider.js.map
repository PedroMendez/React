{"version":3,"sources":["../../../../src/uppy-base/src/plugins/Provider.js"],"names":["require","_getName","id","split","map","s","charAt","toUpperCase","slice","join","module","exports","core","opts","provider","authProvider","name","onReceiveResponse","bind","response","uppyServer","state","host","headers","has","get","setState","Object","assign","fetch","hostname","method","credentials","then","res","json","payload","authenticated","directory","redirect","location","href"],"mappings":"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","file":"Provider.js","sourcesContent":["'use strict'\n\nrequire('whatwg-fetch')\n\nconst _getName = (id) => {\n  return id.split('-').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' ')\n}\n\nmodule.exports = class Provider {\n  constructor (core, opts) {\n    this.core = core\n    this.opts = opts\n    this.provider = opts.provider\n    this.id = this.provider\n    this.authProvider = opts.authProvider || this.provider\n    this.name = this.opts.name || _getName(this.id)\n\n    this.onReceiveResponse = this.onReceiveResponse.bind(this)\n  }\n\n  get hostname () {\n    const uppyServer = this.core.state.uppyServer || {}\n    const host = this.opts.host\n    return uppyServer[host] || host\n  }\n\n  onReceiveResponse (response) {\n    const uppyServer = this.core.state.uppyServer || {}\n    const host = this.opts.host\n    const headers = response.headers\n    // Store the self-identified domain name for the uppy-server we just hit.\n    if (headers.has('i-am') && headers.get('i-am') !== uppyServer[host]) {\n      this.core.setState({\n        uppyServer: Object.assign({}, uppyServer, {\n          [host]: headers.get('i-am')\n        })\n      })\n    }\n    return response\n  }\n\n  checkAuth () {\n    return fetch(`${this.hostname}/${this.id}/authorized`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this.onReceiveResponse)\n    .then((res) => {\n      return res.json()\n      .then((payload) => {\n        return payload.authenticated\n      })\n    })\n  }\n\n  authUrl () {\n    return `${this.hostname}/${this.id}/connect`\n  }\n\n  fileUrl (id) {\n    return `${this.hostname}/${this.id}/get/${id}`\n  }\n\n  list (directory) {\n    return fetch(`${this.hostname}/${this.id}/list/${directory || ''}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this.onReceiveResponse)\n    .then((res) => res.json())\n  }\n\n  logout (redirect = location.href) {\n    return fetch(`${this.hostname}/${this.id}/logout?redirect=${redirect}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n}\n"]}