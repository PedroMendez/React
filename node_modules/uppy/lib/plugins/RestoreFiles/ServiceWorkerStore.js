'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _Promise = typeof Promise === 'undefined' ? require('es6-promise').Promise : Promise;

var isSupported = 'serviceWorker' in navigator;

var ServiceWorkerStore = function () {
  function ServiceWorkerStore(core) {
    var _this = this;

    _classCallCheck(this, ServiceWorkerStore);

    this.core = core;
    this.ready = new _Promise(function (resolve, reject) {
      // service worker stuff
      _this.core.on('core:file-sw-ready', function () {
        resolve();
      });
    });
  }

  ServiceWorkerStore.prototype.list = function list() {
    var defer = {};
    var promise = new _Promise(function (resolve, reject) {
      defer.resolve = resolve;
      defer.reject = reject;
    });

    console.log('Loading stored blobs from Service Worker');
    var onMessage = function onMessage(event) {
      switch (event.data.type) {
        case 'ALL_FILES':
          defer.resolve(event.data.files);
          navigator.serviceWorker.removeEventListener('message', onMessage);
          break;
      }
    };

    this.ready.then(function () {
      navigator.serviceWorker.addEventListener('message', onMessage);

      navigator.serviceWorker.controller.postMessage({
        type: 'GET_FILES'
      });
    });

    return promise;
  };

  ServiceWorkerStore.prototype.put = function put(file) {
    return this.ready.then(function () {
      navigator.serviceWorker.controller.postMessage({
        type: 'ADD_FILE',
        data: {
          id: file.id,
          data: file.data
        }
      });
    });
  };

  ServiceWorkerStore.prototype.delete = function _delete(fileID) {
    return this.ready.then(function () {
      navigator.serviceWorker.controller.postMessage({
        type: 'REMOVE_FILE',
        data: fileID
      });
    });
  };

  return ServiceWorkerStore;
}();

ServiceWorkerStore.isSupported = isSupported;

module.exports = ServiceWorkerStore;
//# sourceMappingURL=ServiceWorkerStore.js.map