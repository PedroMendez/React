{"version":3,"sources":["../../../src/plugins/RestoreFiles/ServiceWorkerStore.js"],"names":["isSupported","navigator","ServiceWorkerStore","core","ready","resolve","reject","on","list","defer","promise","console","log","onMessage","event","data","type","files","serviceWorker","removeEventListener","then","addEventListener","controller","postMessage","put","file","id","delete","fileID","module","exports"],"mappings":";;;;;;AAAA,IAAMA,cAAc,mBAAmBC,SAAvC;;IAEMC,kB;AACJ,8BAAaC,IAAb,EAAmB;AAAA;;AAAA;;AACjB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAa,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5C;AACA,YAAKH,IAAL,CAAUI,EAAV,CAAa,oBAAb,EAAmC,YAAM;AACvCF;AACD,OAFD;AAGD,KALY,CAAb;AAMD;;+BAEDG,I,mBAAQ;AACN,QAAMC,QAAQ,EAAd;AACA,QAAMC,UAAU,aAAY,UAACL,OAAD,EAAUC,MAAV,EAAqB;AAC/CG,YAAMJ,OAAN,GAAgBA,OAAhB;AACAI,YAAMH,MAAN,GAAeA,MAAf;AACD,KAHe,CAAhB;;AAKAK,YAAQC,GAAR,CAAY,0CAAZ;AACA,QAAMC,YAAY,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,cAAQA,MAAMC,IAAN,CAAWC,IAAnB;AACE,aAAK,WAAL;AACEP,gBAAMJ,OAAN,CAAcS,MAAMC,IAAN,CAAWE,KAAzB;AACAhB,oBAAUiB,aAAV,CAAwBC,mBAAxB,CAA4C,SAA5C,EAAuDN,SAAvD;AACA;AAJJ;AAMD,KAPD;;AASA,SAAKT,KAAL,CAAWgB,IAAX,CAAgB,YAAM;AACpBnB,gBAAUiB,aAAV,CAAwBG,gBAAxB,CAAyC,SAAzC,EAAoDR,SAApD;;AAEAZ,gBAAUiB,aAAV,CAAwBI,UAAxB,CAAmCC,WAAnC,CAA+C;AAC7CP,cAAM;AADuC,OAA/C;AAGD,KAND;;AAQA,WAAON,OAAP;AACD,G;;+BAEDc,G,gBAAKC,I,EAAM;AACT,WAAO,KAAKrB,KAAL,CAAWgB,IAAX,CAAgB,YAAM;AAC3BnB,gBAAUiB,aAAV,CAAwBI,UAAxB,CAAmCC,WAAnC,CAA+C;AAC7CP,cAAM,UADuC;AAE7CD,cAAM;AACJW,cAAID,KAAKC,EADL;AAEJX,gBAAMU,KAAKV;AAFP;AAFuC,OAA/C;AAOD,KARM,CAAP;AASD,G;;+BAEDY,M,oBAAQC,M,EAAQ;AACd,WAAO,KAAKxB,KAAL,CAAWgB,IAAX,CAAgB,YAAM;AAC3BnB,gBAAUiB,aAAV,CAAwBI,UAAxB,CAAmCC,WAAnC,CAA+C;AAC7CP,cAAM,aADuC;AAE7CD,cAAMa;AAFuC,OAA/C;AAID,KALM,CAAP;AAMD,G;;;;;AAGH1B,mBAAmBF,WAAnB,GAAiCA,WAAjC;;AAEA6B,OAAOC,OAAP,GAAiB5B,kBAAjB","file":"ServiceWorkerStore.js","sourcesContent":["const isSupported = 'serviceWorker' in navigator\n\nclass ServiceWorkerStore {\n  constructor (core) {\n    this.core = core\n    this.ready = new Promise((resolve, reject) => {\n      // service worker stuff\n      this.core.on('core:file-sw-ready', () => {\n        resolve()\n      })\n    })\n  }\n\n  list () {\n    const defer = {}\n    const promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve\n      defer.reject = reject\n    })\n\n    console.log('Loading stored blobs from Service Worker')\n    const onMessage = (event) => {\n      switch (event.data.type) {\n        case 'ALL_FILES':\n          defer.resolve(event.data.files)\n          navigator.serviceWorker.removeEventListener('message', onMessage)\n          break\n      }\n    }\n\n    this.ready.then(() => {\n      navigator.serviceWorker.addEventListener('message', onMessage)\n\n      navigator.serviceWorker.controller.postMessage({\n        type: 'GET_FILES'\n      })\n    })\n\n    return promise\n  }\n\n  put (file) {\n    return this.ready.then(() => {\n      navigator.serviceWorker.controller.postMessage({\n        type: 'ADD_FILE',\n        data: {\n          id: file.id,\n          data: file.data\n        }\n      })\n    })\n  }\n\n  delete (fileID) {\n    return this.ready.then(() => {\n      navigator.serviceWorker.controller.postMessage({\n        type: 'REMOVE_FILE',\n        data: fileID\n      })\n    })\n  }\n}\n\nServiceWorkerStore.isSupported = isSupported\n\nmodule.exports = ServiceWorkerStore\n"]}