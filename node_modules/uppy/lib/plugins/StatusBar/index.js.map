{"version":3,"sources":["../../../src/plugins/StatusBar/index.js"],"names":["Plugin","require","StatusBar","getSpeed","getBytesRemaining","prettyETA","prettyBytes","module","exports","core","opts","id","title","type","defaultOptions","target","showProgressDetails","pauseAll","bind","resumeAll","cancelAll","render","install","emit","getTotalSpeed","files","totalSpeed","forEach","file","progress","getTotalETA","totalBytesRemaining","reduce","total","Math","round","state","uploadStartedFiles","Object","keys","filter","uploadStarted","completeFiles","uploadComplete","inProgressFiles","isPaused","processingFiles","preprocess","postprocess","inProgressFilesArray","push","totalETA","totalSize","totalUploadedSize","bytesTotal","bytesUploaded","isAllComplete","totalProgress","length","isAllPaused","isUploadStarted","resumableUploads","getState","capabilities","error","complete","inProgress","plugin","mount","uninstall","unmount"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../Plugin')\nconst StatusBar = require('./StatusBar')\nconst { getSpeed } = require('../../core/Utils')\nconst { getBytesRemaining } = require('../../core/Utils')\nconst { prettyETA } = require('../../core/Utils')\nconst prettyBytes = require('prettier-bytes')\n\n/**\n * A status bar.\n */\nmodule.exports = class StatusBarUI extends Plugin {\n  constructor (core, opts) {\n    super(core, opts)\n    this.id = 'StatusBarUI'\n    this.title = 'StatusBar UI'\n    this.type = 'progressindicator'\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      showProgressDetails: false\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.pauseAll = this.pauseAll.bind(this)\n    this.resumeAll = this.resumeAll.bind(this)\n    this.cancelAll = this.cancelAll.bind(this)\n    this.render = this.render.bind(this)\n    this.install = this.install.bind(this)\n  }\n\n  cancelAll () {\n    this.core.emit('core:cancel-all')\n  }\n\n  pauseAll () {\n    this.core.emit('core:pause-all')\n  }\n\n  resumeAll () {\n    this.core.emit('core:resume-all')\n  }\n\n  getTotalSpeed (files) {\n    let totalSpeed = 0\n    files.forEach((file) => {\n      totalSpeed = totalSpeed + getSpeed(file.progress)\n    })\n    return totalSpeed\n  }\n\n  getTotalETA (files) {\n    const totalSpeed = this.getTotalSpeed(files)\n    if (totalSpeed === 0) {\n      return 0\n    }\n\n    const totalBytesRemaining = files.reduce((total, file) => {\n      return total + getBytesRemaining(file.progress)\n    }, 0)\n\n    return Math.round(totalBytesRemaining / totalSpeed * 10) / 10\n  }\n\n  render (state) {\n    const files = state.files\n\n    const uploadStartedFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.uploadStarted\n    })\n    const completeFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.uploadComplete\n    })\n    const inProgressFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadComplete &&\n             files[file].progress.uploadStarted &&\n             !files[file].isPaused\n    })\n    const processingFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.preprocess || files[file].progress.postprocess\n    })\n\n    let inProgressFilesArray = []\n    inProgressFiles.forEach((file) => {\n      inProgressFilesArray.push(files[file])\n    })\n\n    const totalSpeed = prettyBytes(this.getTotalSpeed(inProgressFilesArray))\n    const totalETA = prettyETA(this.getTotalETA(inProgressFilesArray))\n\n    // total size and uploaded size\n    let totalSize = 0\n    let totalUploadedSize = 0\n    inProgressFilesArray.forEach((file) => {\n      totalSize = totalSize + (file.progress.bytesTotal || 0)\n      totalUploadedSize = totalUploadedSize + (file.progress.bytesUploaded || 0)\n    })\n    totalSize = prettyBytes(totalSize)\n    totalUploadedSize = prettyBytes(totalUploadedSize)\n\n    const isAllComplete = state.totalProgress === 100 &&\n      completeFiles.length === Object.keys(files).length &&\n      processingFiles.length === 0\n    const isAllPaused = inProgressFiles.length === 0 && !isAllComplete && uploadStartedFiles.length > 0\n    const isUploadStarted = uploadStartedFiles.length > 0\n\n    const resumableUploads = this.core.getState().capabilities.resumableUploads || false\n\n    return StatusBar({\n      error: state.error,\n      totalProgress: state.totalProgress,\n      totalSize: totalSize,\n      totalUploadedSize: totalUploadedSize,\n      uploadStartedFiles: uploadStartedFiles,\n      isAllComplete: isAllComplete,\n      isAllPaused: isAllPaused,\n      isUploadStarted: isUploadStarted,\n      pauseAll: this.pauseAll,\n      resumeAll: this.resumeAll,\n      cancelAll: this.cancelAll,\n      complete: completeFiles.length,\n      inProgress: uploadStartedFiles.length,\n      totalSpeed: totalSpeed,\n      totalETA: totalETA,\n      files: state.files,\n      resumableUploads: resumableUploads\n    })\n  }\n\n  install () {\n    const target = this.opts.target\n    const plugin = this\n    this.target = this.mount(target, plugin)\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"]}