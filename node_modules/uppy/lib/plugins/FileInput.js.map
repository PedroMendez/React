{"version":3,"sources":["../../src/plugins/FileInput.js"],"names":["Plugin","require","toArray","Translator","module","exports","core","opts","id","title","type","defaultLocale","strings","selectToUpload","defaultOptions","target","getMetaFromForm","replaceTargetContent","multipleFiles","pretty","locale","inputName","translator","i18n","translate","bind","render","handleInputChange","ev","log","files","forEach","file","addFile","source","name","data","state","hiddenInputStyle","input","click","install","plugin","mount","uninstall","unmount"],"mappings":"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","file":"FileInput.js","sourcesContent":["const Plugin = require('./Plugin')\nconst { toArray } = require('../core/Utils')\nconst Translator = require('../core/Translator')\nconst html = require('yo-yo')\n\nmodule.exports = class FileInput extends Plugin {\n  constructor (core, opts) {\n    super(core, opts)\n    this.id = 'FileInput'\n    this.title = 'File Input'\n    this.type = 'acquirer'\n\n    const defaultLocale = {\n      strings: {\n        selectToUpload: 'Select to upload'\n      }\n    }\n\n    // Default options\n    const defaultOptions = {\n      target: '.UppyForm',\n      getMetaFromForm: true,\n      replaceTargetContent: true,\n      multipleFiles: true,\n      pretty: true,\n      locale: defaultLocale,\n      inputName: 'files[]'\n    }\n\n    // Merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    // i18n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.render = this.render.bind(this)\n  }\n\n  handleInputChange (ev) {\n    this.core.log('All right, something selected through input...')\n\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      this.core.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  render (state) {\n    const hiddenInputStyle = 'width: 0.1px; height: 0.1px; opacity: 0; overflow: hidden; position: absolute; z-index: -1;'\n\n    const input = html`<input class=\"uppy-FileInput-input\"\n           style=\"${this.opts.pretty ? hiddenInputStyle : ''}\"\n           type=\"file\"\n           name=${this.opts.inputName}\n           onchange=${this.handleInputChange.bind(this)}\n           multiple=\"${this.opts.multipleFiles ? 'true' : 'false'}\"\n           value=\"\">`\n\n    return html`<form class=\"Uppy uppy-FileInput-form\">\n      ${input}\n      ${this.opts.pretty\n        ? html`<button class=\"uppy-FileInput-btn\" type=\"button\" onclick=${() => input.click()}>\n          ${this.i18n('selectToUpload')}\n        </button>`\n       : null\n     }\n    </form>`\n  }\n\n  install () {\n    const target = this.opts.target\n    const plugin = this\n    this.target = this.mount(target, plugin)\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"]}