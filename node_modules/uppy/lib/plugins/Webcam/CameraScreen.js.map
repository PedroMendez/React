{"version":3,"sources":["../../../src/plugins/Webcam/CameraScreen.js"],"names":["SnapshotButton","require","RecordButton","isModeAvailable","modes","mode","indexOf","module","exports","props","src","video","useTheFlash","getSWFHTML","shouldShowRecordButton","supportsRecording","shouldShowSnapshotButton","el","onFocus","recordButton","querySelector","focus","onStop"],"mappings":";;;;;AACA,IAAMA,iBAAiBC,QAAQ,kBAAR,CAAvB;AACA,IAAMC,eAAeD,QAAQ,gBAAR,CAArB;;AAEA,SAASE,eAAT,CAA0BC,KAA1B,EAAiCC,IAAjC,EAAuC;AACrC,SAAOD,MAAME,OAAN,CAAcD,IAAd,MAAwB,CAAC,CAAhC;AACD;;AAEDE,OAAOC,OAAP,GAAiB,UAACC,KAAD,EAAW;AAAA;;AAC1B,MAAMC,MAAMD,MAAMC,GAAN,IAAa,EAAzB;AACA,MAAIC,cAAJ;;AAEA,MAAIF,MAAMG,WAAV,EAAuB;AACrBD,YAAQF,MAAMI,UAAN,EAAR;AACD,GAFD,MAEO;AAAA;;AACLF,0NAAmED,GAAnE;AACD;;AAED,MAAMI,yBAAyBL,MAAMM,iBAAN,KAC7BZ,gBAAgBM,MAAML,KAAtB,EAA6B,YAA7B,KACAD,gBAAgBM,MAAML,KAAtB,EAA6B,YAA7B,CADA,IAEAD,gBAAgBM,MAAML,KAAtB,EAA6B,aAA7B,CAH6B,CAA/B;;AAMA,MAAMY,2BAA2Bb,gBAAgBM,MAAML,KAAtB,EAA6B,SAA7B,CAAjC;;AAEA,6FAC6C,UAACa,EAAD,EAAQ;AACjDR,UAAMS,OAAN;AACA,QAAMC,eAAeF,GAAGG,aAAH,CAAiB,0BAAjB,CAArB;AACA,QAAID,YAAJ,EAAkBA,aAAaE,KAAb;AACnB,GALH,EAKgB,UAACJ,EAAD,EAAQ;AACpBR,UAAMa,MAAN;AACD,GAPH,2SASQX,KATR,sOAYQG,yBAAyBZ,aAAaO,KAAb,CAAzB,GAA+C,IAZvD,OAaQO,2BAA2BhB,eAAeS,KAAf,CAA3B,GAAmD,IAb3D;AAkBD,CApCD","file":"CameraScreen.js","sourcesContent":["const html = require('yo-yo')\nconst SnapshotButton = require('./SnapshotButton')\nconst RecordButton = require('./RecordButton')\n\nfunction isModeAvailable (modes, mode) {\n  return modes.indexOf(mode) !== -1\n}\n\nmodule.exports = (props) => {\n  const src = props.src || ''\n  let video\n\n  if (props.useTheFlash) {\n    video = props.getSWFHTML()\n  } else {\n    video = html`<video class=\"UppyWebcam-video\" autoplay muted src=\"${src}\"></video>`\n  }\n\n  const shouldShowRecordButton = props.supportsRecording && (\n    isModeAvailable(props.modes, 'video-only') ||\n    isModeAvailable(props.modes, 'audio-only') ||\n    isModeAvailable(props.modes, 'video-audio')\n  )\n\n  const shouldShowSnapshotButton = isModeAvailable(props.modes, 'picture')\n\n  return html`\n    <div class=\"UppyWebcam-container\" onload=${(el) => {\n      props.onFocus()\n      const recordButton = el.querySelector('.UppyWebcam-recordButton')\n      if (recordButton) recordButton.focus()\n    }} onunload=${(el) => {\n      props.onStop()\n    }}>\n      <div class='UppyWebcam-videoContainer'>\n        ${video}\n      </div>\n      <div class='UppyWebcam-buttonContainer'>\n        ${shouldShowRecordButton ? RecordButton(props) : null}\n        ${shouldShowSnapshotButton ? SnapshotButton(props) : null}\n      </div>\n      <canvas class=\"UppyWebcam-canvas\" style=\"display: none;\"></canvas>\n    </div>\n  `\n}\n"]}