{"version":3,"sources":["../../../src/plugins/Dashboard/FileCard.js"],"names":["getFileTypeIcon","require","checkIcon","module","exports","fileCard","props","file","fileCardFor","files","meta","tempStoreMetaOrSubmit","ev","keyCode","done","id","value","target","name","dataset","renderMetaFields","metaFields","map","field","placeholder","type","general","specific","color","preview","icon"],"mappings":";;;;;AACA,IAAMA,kBAAkBC,QAAQ,mBAAR,CAAxB;;eACsBA,QAAQ,SAAR,C;IAAdC,S,YAAAA,S;;AAERC,OAAOC,OAAP,GAAiB,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACzC,MAAMC,OAAOD,MAAME,WAAN,GAAoBF,MAAMG,KAAN,CAAYH,MAAME,WAAlB,CAApB,GAAqD,KAAlE;AACA,MAAME,OAAO,EAAb;;AAEA,MAAMC,wBAAwB,SAAxBA,qBAAwB,CAACC,EAAD,EAAQ;AACpC,QAAIA,GAAGC,OAAH,KAAe,EAAnB,EAAuB;AACrBP,YAAMQ,IAAN,CAAWJ,IAAX,EAAiBH,KAAKQ,EAAtB;AACD;;AAED,QAAMC,QAAQJ,GAAGK,MAAH,CAAUD,KAAxB;AACA,QAAME,OAAON,GAAGK,MAAH,CAAUE,OAAV,CAAkBD,IAA/B;AACAR,SAAKQ,IAAL,IAAaF,KAAb;AACD,GARD;;AAUA,WAASI,gBAAT,CAA2Bb,IAA3B,EAAiC;AAC/B,QAAMc,aAAaf,MAAMe,UAAN,IAAoB,EAAvC;AACA,WAAOA,WAAWC,GAAX,CAAe,UAACC,KAAD,EAAW;AAAA;;AAC/B,0ZAC+CA,MAAML,IADrD,mOAIsBK,MAAMR,EAJ5B,uEAKkBR,KAAKG,IAAL,CAAUa,MAAMR,EAAhB,CALlB,6EAMwBQ,MAAMC,WAAN,IAAqB,EAN7C,+CAOmBb,qBAPnB;AAQD,KATM,CAAP;AAUD;;AAED,gIAA8D,CAACL,MAAME,WAArE,yrBAEkGD,KAAKG,IAAL,GAAYH,KAAKG,IAAL,CAAUQ,IAAtB,GAA6BX,KAAKW,IAFpI,8SAIsB;AAAA,WAAMZ,MAAMQ,IAAN,CAAWJ,IAAX,EAAiBH,KAAKQ,EAAtB,CAAN;AAAA,GAJtB,mMAMIT,MAAME,WAAN,qVAE0ER,gBAAgBO,KAAKkB,IAAL,CAAUC,OAA1B,EAAmCnB,KAAKkB,IAAL,CAAUE,QAA7C,EAAuDC,KAFjI,iJAGQrB,KAAKsB,OAAL,+EACmBtB,KAAKW,IADxB,8CACsCX,KAAKsB,OAD3C,iXAG8D7B,gBAAgBO,KAAKkB,IAAL,CAAUC,OAA1B,EAAmCnB,KAAKkB,IAAL,CAAUE,QAA7C,EAAuDC,KAHrH,4IAG+H5B,gBAAgBO,KAAKkB,IAAL,CAAUC,OAA1B,EAAmCnB,KAAKkB,IAAL,CAAUE,QAA7C,EAAuDG,IAHtL,8hCAHR,o6BAcyFvB,KAAKG,IAAL,CAAUQ,IAdnG,gDAeyBP,qBAfzB,kKAiBQS,iBAAiBb,IAAjB,CAjBR,4EAoBE,IA1BN,4XAgCsB;AAAA,WAAMD,MAAMQ,IAAN,CAAWJ,IAAX,EAAiBH,KAAKQ,EAAtB,CAAN;AAAA,GAhCtB,oJAgCyDb,WAhCzD;AAmCD,CA/DD","file":"FileCard.js","sourcesContent":["const html = require('yo-yo')\nconst getFileTypeIcon = require('./getFileTypeIcon')\nconst { checkIcon } = require('./icons')\n\nmodule.exports = function fileCard (props) {\n  const file = props.fileCardFor ? props.files[props.fileCardFor] : false\n  const meta = {}\n\n  const tempStoreMetaOrSubmit = (ev) => {\n    if (ev.keyCode === 13) {\n      props.done(meta, file.id)\n    }\n\n    const value = ev.target.value\n    const name = ev.target.dataset.name\n    meta[name] = value\n  }\n\n  function renderMetaFields (file) {\n    const metaFields = props.metaFields || []\n    return metaFields.map((field) => {\n      return html`<fieldset class=\"UppyDashboardFileCard-fieldset\">\n        <label class=\"UppyDashboardFileCard-label\">${field.name}</label>\n        <input class=\"UppyDashboardFileCard-input\"\n               type=\"text\"\n               data-name=\"${field.id}\"\n               value=\"${file.meta[field.id]}\"\n               placeholder=\"${field.placeholder || ''}\"\n               onkeyup=${tempStoreMetaOrSubmit} /></fieldset>`\n    })\n  }\n\n  return html`<div class=\"UppyDashboardFileCard\" aria-hidden=\"${!props.fileCardFor}\">\n    <div class=\"UppyDashboardContent-bar\">\n      <h2 class=\"UppyDashboardContent-title\">Editing <span class=\"UppyDashboardContent-titleFile\">${file.meta ? file.meta.name : file.name}</span></h2>\n      <button class=\"UppyDashboardContent-back\" type=\"button\" title=\"Finish editing file\"\n              onclick=${() => props.done(meta, file.id)}>Done</button>\n    </div>\n    ${props.fileCardFor\n      ? html`<div class=\"UppyDashboardFileCard-inner\">\n          <div class=\"UppyDashboardFileCard-preview\" style=\"background-color: ${getFileTypeIcon(file.type.general, file.type.specific).color}\">\n            ${file.preview\n              ? html`<img alt=\"${file.name}\" src=\"${file.preview}\">`\n              : html`<div class=\"UppyDashboardItem-previewIconWrap\">\n                <span class=\"UppyDashboardItem-previewIcon\" style=\"color: ${getFileTypeIcon(file.type.general, file.type.specific).color}\">${getFileTypeIcon(file.type.general, file.type.specific).icon}</span>\n                <svg class=\"UppyDashboardItem-previewIconBg\" width=\"72\" height=\"93\" viewBox=\"0 0 72 93\"><g><path d=\"M24.08 5h38.922A2.997 2.997 0 0 1 66 8.003v74.994A2.997 2.997 0 0 1 63.004 86H8.996A2.998 2.998 0 0 1 6 83.01V22.234L24.08 5z\" fill=\"#FFF\"/><path d=\"M24 5L6 22.248h15.007A2.995 2.995 0 0 0 24 19.244V5z\" fill=\"#E4E4E4\"/></g></svg>\n              </div>`\n            }\n          </div>\n          <div class=\"UppyDashboardFileCard-info\">\n            <fieldset class=\"UppyDashboardFileCard-fieldset\">\n              <label class=\"UppyDashboardFileCard-label\">Name</label>\n              <input class=\"UppyDashboardFileCard-input\" data-name=\"name\" type=\"text\" value=\"${file.meta.name}\"\n                     onkeyup=${tempStoreMetaOrSubmit} />\n            </fieldset>\n            ${renderMetaFields(file)}\n          </div>\n        </div>`\n      : null\n    }\n    <div class=\"UppyDashboard-actions\">\n      <button class=\"UppyButton--circular UppyButton--blue UppyDashboardFileCard-done\"\n              type=\"button\"\n              title=\"Finish editing file\"\n              onclick=${() => props.done(meta, file.id)}>${checkIcon()}</button>\n    </div>\n  </div>`\n}\n"]}